version: '3.8'

services:
  postgresql:
    image: postgres:17.5-alpine
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./docker/postgres-data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - dev-network

  db-restore:
    image: postgres:17.5-alpine
    container_name: text-to-sql-db-restore
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/bin/sh", "/app/scripts/restore-database.sh"]
    restart: "no"

  pgadmin:
    image: dpage/pgadmin4:9.8
    container_name: pgadmin_gui
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - '5050:80'
    depends_on:
      - postgresql
    networks:
      - dev-network

  redis:
    image: redis:7.4-alpine
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - dev-network

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog_server
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP server
      - '8025:8025' # Web UI
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge
